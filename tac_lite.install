<?php

/**
 * @file
 *   Installation functions for tac_lite.
 */

/**
 * Implements hook_install().
 *
 * Ensure that tac_lite hooks are invoked after taxonomy module hooks.
 */
function tac_lite_install() {
  $taxonomy_weight = db_query("SELECT weight FROM {system} WHERE name = 'taxonomy'")->fetchField();
  $num_updated = db_update('system')
  ->fields(array(
    'weight' => $taxonomy_weight + 9,
  ))
  ->condition('name', 'tac_lite')
  ->execute();

  // Note that it is not necessary to rebuild the node access table here, as
  // that will be done when module settings are saved.
}

/**
 * Convert variables to config.
 */
function tac_lite_update_1000() {
  $schemes = update_variable_get('tac_lite_schemes', 1);
  // Convert variables to config.
  $config = config('tac_lite.settings');
  $config->set('categories', update_variable_get('tac_lite_categories', [0]));
  $config->set('schemes', $schemes);
  for ($i = 1; $i <= $schemes; $i++) {
    $config->set('config_scheme_' . $i, update_variable_get('tac_lite_config_scheme_' . $i));
    $config->set('grants_scheme_' . $i, update_variable_get('tac_lite_grants_scheme_' . $i));
    update_variable_del('tac_lite_config_scheme_' . $i);
    update_variable_del('tac_lite_grants_scheme_' . $i);
  }
  $config->save();
  update_variable_del('tac_lite_categories');
  update_variable_del('tac_lite_schemes');
}

/**
 * Implements hook_update_last_removed().
 */
function tac_lite_update_last_removed() {
  return 7002;
}
